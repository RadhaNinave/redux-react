{"ast":null,"code":"/*\r\nimport {createStore} from 'redux';\r\nimport counterSlice from '../components/Counter';\r\nimport { configureStore,createSlice } from '@reduxjs/toolkit';\r\nconst counterReducer=(state = {counter:0}, action)=>{\r\n         if(action.type === \"increment\"){\r\n           return{\r\n            counter : state.counter+1,\r\n            \r\n          }\r\n        }\r\n        if(action.type === \"incrementBy5\"){\r\n          return{\r\n           counter : state.counter+5,\r\n           \r\n         }\r\n       }\r\n    \r\n      \r\n    \r\n        if(action.type === \"decrement\"){\r\n            return{\r\n              counter : state.counter-1,\r\n              \r\n            }\r\n          }\r\n          if(action.type === \"decrementBy5\"){\r\n            return{\r\n              counter : state.counter-5,\r\n              \r\n            }\r\n          }\r\n        \r\n        if(action.type==='toggle'){\r\n            return{\r\n               counter : state.counter,\r\n                \r\n            }\r\n       }  \r\n    \r\n          return state\r\n }\r\n const store = createStore(counterReducer); \r\n\r\n export default store;*/\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer"],"sources":["C:/Users/HP/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["/*\r\nimport {createStore} from 'redux';\r\nimport counterSlice from '../components/Counter';\r\nimport { configureStore,createSlice } from '@reduxjs/toolkit';\r\nconst counterReducer=(state = {counter:0}, action)=>{\r\n         if(action.type === \"increment\"){\r\n           return{\r\n            counter : state.counter+1,\r\n            \r\n          }\r\n        }\r\n        if(action.type === \"incrementBy5\"){\r\n          return{\r\n           counter : state.counter+5,\r\n           \r\n         }\r\n       }\r\n    \r\n      \r\n    \r\n        if(action.type === \"decrement\"){\r\n            return{\r\n              counter : state.counter-1,\r\n              \r\n            }\r\n          }\r\n          if(action.type === \"decrementBy5\"){\r\n            return{\r\n              counter : state.counter-5,\r\n              \r\n            }\r\n          }\r\n        \r\n        if(action.type==='toggle'){\r\n            return{\r\n               counter : state.counter,\r\n                \r\n            }\r\n       }  \r\n    \r\n          return state\r\n }\r\n const store = createStore(counterReducer); \r\n\r\n export default store;*/\r\n import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    }\r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer\r\n});\r\nexport default store;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE/D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAa,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAEX,YAAY,CAACW;AACxB,CAAC,CAAC;AACF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}